{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"outputinput\"];\nexport let OutputPropertiesComponent = /*#__PURE__*/(() => {\n  class OutputPropertiesComponent {\n    constructor() {\n      this.resultvalue = 0;\n      this.changevalue = new EventEmitter();\n    }\n    sumValue() {\n      this.resultvalue++;\n      console.log(this.output.nativeElement.value);\n      this.changevalue.emit({\n        newvalue: this.resultvalue\n      });\n    }\n    decreaseValue() {\n      this.resultvalue--;\n      console.log(this.output.nativeElement.value);\n      this.changevalue.emit({\n        newvalue: this.resultvalue\n      });\n    }\n    ngOnInit() {}\n  }\n  OutputPropertiesComponent.ɵfac = function OutputPropertiesComponent_Factory(t) {\n    return new (t || OutputPropertiesComponent)();\n  };\n  OutputPropertiesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OutputPropertiesComponent,\n    selectors: [[\"counter\"]],\n    viewQuery: function OutputPropertiesComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.output = _t.first);\n      }\n    },\n    inputs: {\n      resultvalue: [\"value\", \"resultvalue\"]\n    },\n    outputs: {\n      changevalue: \"changevalue\"\n    },\n    decls: 11,\n    vars: 1,\n    consts: [[2, \"padding-top\", \"1em\", \"font-variant\", \"small-caps\", \"font-size\", \"1.3em\"], [1, \"btn\", 3, \"click\"], [\"type\", \"text\", \"size\", \"4\", \"readonly\", \"\", 1, \"resultinput\", 3, \"value\"], [\"outputinput\", \"\"]],\n    template: function OutputPropertiesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\")(1, \"div\", 0)(2, \"p\");\n        i0.ɵɵtext(3, \"Output Properties\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\")(5, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function OutputPropertiesComponent_Template_button_click_5_listener() {\n          return ctx.sumValue();\n        });\n        i0.ɵɵtext(6, \"+\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 2, 3);\n        i0.ɵɵelementStart(9, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function OutputPropertiesComponent_Template_button_click_9_listener() {\n          return ctx.decreaseValue();\n        });\n        i0.ɵɵtext(10, \"-\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"value\", ctx.resultvalue);\n      }\n    },\n    styles: [\"section[_ngcontent-%COMP%]{background-color:#161616;border-radius:10px;padding-bottom:1em}div[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;justify-content:center;width:100%}.btn[_ngcontent-%COMP%]{font-family:monospace;font-size:1.2em;background-color:#00008b;border:1px solid white;display:flex;flex-direction:row;justify-content:center;align-items:center;border-radius:7px;padding:1em;width:2em;height:2em;margin:1em;transition:1s ease}.btn[_ngcontent-%COMP%]:hover{transform:translate(.2em,.2em);cursor:pointer}.resultinput[_ngcontent-%COMP%]{height:2em;text-align:center}\"]\n  });\n  return OutputPropertiesComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}